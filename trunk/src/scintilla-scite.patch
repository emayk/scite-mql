diff -r be657e3ced19 scintilla/include/SciLexer.h
--- a/scintilla/include/SciLexer.h	Mon Jul 23 00:20:07 2012 -0500
+++ b/scintilla/include/SciLexer.h	Mon Jul 23 00:52:24 2012 -0500
@@ -160,6 +160,10 @@
 #define SCE_C_STRINGRAW 20
 #define SCE_C_TRIPLEVERBATIM 21
 #define SCE_C_HASHQUOTEDSTRING 22
+#define SCE_C_KEYWORD6 23
+#define SCE_C_KEYWORD7 24
+#define SCE_C_KEYWORD8 25
+#define SCE_C_KEYWORD9 26
 #define SCE_D_DEFAULT 0
 #define SCE_D_COMMENT 1
 #define SCE_D_COMMENTLINE 2
@@ -476,6 +480,8 @@
 #define SCE_ERR_TIDY 19
 #define SCE_ERR_JAVA_STACK 20
 #define SCE_ERR_VALUE 21
+#define SCE_ERR_MQL 22
+#define SCE_ERR_MQLWRN   23
 #define SCE_BAT_DEFAULT 0
 #define SCE_BAT_COMMENT 1
 #define SCE_BAT_WORD 2
diff -r be657e3ced19 scintilla/include/Scintilla.iface
--- a/scintilla/include/Scintilla.iface	Mon Jul 23 00:20:07 2012 -0500
+++ b/scintilla/include/Scintilla.iface	Mon Jul 23 00:52:24 2012 -0500
@@ -2540,6 +2540,10 @@
 val SCE_C_STRINGRAW=20
 val SCE_C_TRIPLEVERBATIM=21
 val SCE_C_HASHQUOTEDSTRING=22
+val SCE_C_KEYWORD6=23
+val SCE_C_KEYWORD7=24
+val SCE_C_KEYWORD8=25
+val SCE_C_KEYWORD9=26
 # Lexical states for SCLEX_D
 lex D=SCLEX_D SCE_D_
 val SCE_D_DEFAULT=0
@@ -2893,6 +2897,8 @@
 val SCE_ERR_TIDY=19
 val SCE_ERR_JAVA_STACK=20
 val SCE_ERR_VALUE=21
+val SCE_ERR_MQL=22
+val SCE_ERR_MQLWRN = 23
 # Lexical states for SCLEX_BATCH
 lex Batch=SCLEX_BATCH SCE_BAT_
 val SCE_BAT_DEFAULT=0
diff -r be657e3ced19 scintilla/lexers/LexCPP.cxx
--- a/scintilla/lexers/LexCPP.cxx	Mon Jul 23 00:20:07 2012 -0500
+++ b/scintilla/lexers/LexCPP.cxx	Mon Jul 23 00:52:24 2012 -0500
@@ -244,6 +244,10 @@
             "Documentation comment keywords",
             "Global classes and typedefs",
             "Preprocessor definitions",
+			"Third keywords set",
+			"Fouth keywords set",
+			"Fifth keywords set",
+			"Sixth keywords set",
             0,
 };
 
@@ -320,7 +324,11 @@
 	WordList keywords2;
 	WordList keywords3;
 	WordList keywords4;
-	WordList ppDefinitions;
+	WordList ppDefinitions; // keywords5
+	WordList keywords6;
+	WordList keywords7;
+	WordList keywords8;
+	WordList keywords9;
 	std::map<std::string, std::string> preprocessorDefinitionsStart;
 	OptionsCPP options;
 	OptionSetCPP osCPP;
@@ -402,6 +410,18 @@
 	case 4:
 		wordListN = &ppDefinitions;
 		break;
+	case 5:
+		wordListN = &keywords6;
+		break;
+	case 6:
+		wordListN = &keywords7;
+		break;
+	case 7:
+		wordListN = &keywords8;
+		break;
+	case 8:
+		wordListN = &keywords9;
+		break;
 	}
 	int firstModification = -1;
 	if (wordListN) {
@@ -588,6 +608,14 @@
 						sc.ChangeState(SCE_C_WORD2|activitySet);
 					} else if (keywords4.InList(s)) {
 						sc.ChangeState(SCE_C_GLOBALCLASS|activitySet);
+					} else if (keywords6.InList(s)) {
+						sc.ChangeState(SCE_C_KEYWORD6|activitySet);
+					} else if (keywords7.InList(s)) {
+						sc.ChangeState(SCE_C_KEYWORD7|activitySet);
+					} else if (keywords8.InList(s)) {
+						sc.ChangeState(SCE_C_KEYWORD8|activitySet);
+					} else if (keywords9.InList(s)) {
+						sc.ChangeState(SCE_C_KEYWORD9|activitySet);
 					}
 					const bool literalString = sc.ch == '\"';
 					if (literalString || sc.ch == '\'') {
diff -r be657e3ced19 scintilla/lexers/LexOthers.cxx
--- a/scintilla/lexers/LexOthers.cxx	Mon Jul 23 00:20:07 2012 -0500
+++ b/scintilla/lexers/LexOthers.cxx	Mon Jul 23 00:52:24 2012 -0500
@@ -32,6 +32,13 @@
 	return strncmp(haystack, needle, strlen(needle)) == 0;
 }
 
+static int strchacnt(const char *haystack, const char needle) {
+	int count = 0;
+	for (int i = 0; i < strlen(haystack); i++)
+		if (haystack[i] == needle) count++;
+	return count;
+}
+
 static bool Is0To9(char ch) {
 	return (ch >= '0') && (ch <= '9');
 }
@@ -1013,6 +1020,10 @@
 	           strstr(lineBuffer, ".java:")) {
 		// Java stack back trace
 		return SCE_ERR_JAVA_STACK;
+	} else if (strchacnt(lineBuffer, ';') >= 4) {
+		// metalang error / warning
+		const char *lineSt = strrchr(lineBuffer, ';');
+		return (lineSt[-1] != ';') ? SCE_ERR_MQL : SCE_ERR_MQLWRN;
 	} else {
 		// Look for one of the following formats:
 		// GCC: <filename>:<line>:<message>
diff -r be657e3ced19 scite/src/IFaceTable.cxx
--- a/scite/src/IFaceTable.cxx	Mon Jul 23 00:20:07 2012 -0500
+++ b/scite/src/IFaceTable.cxx	Mon Jul 23 00:52:24 2012 -0500
@@ -671,6 +671,10 @@
 	{"SCE_C_GLOBALCLASS",19},
 	{"SCE_C_HASHQUOTEDSTRING",22},
 	{"SCE_C_IDENTIFIER",11},
+	{"SCE_C_KEYWORD6",23},
+	{"SCE_C_KEYWORD7",24},
+	{"SCE_C_KEYWORD8",25},
+	{"SCE_C_KEYWORD9",26},
 	{"SCE_C_NUMBER",4},
 	{"SCE_C_OPERATOR",10},
 	{"SCE_C_PREPROCESSOR",9},
diff -r be657e3ced19 scite/src/SciTEBuffers.cxx
--- a/scite/src/SciTEBuffers.cxx	Mon Jul 23 00:20:07 2012 -0500
+++ b/scite/src/SciTEBuffers.cxx	Mon Jul 23 00:52:24 2012 -0500
@@ -1999,6 +1999,17 @@
 			}
 			break;
 		}
+	case SCE_ERR_MQL: {
+			char *lineSt = strrchr(cdoc, ';');
+			lineSt[0] = 0;
+			lineSt = strrchr(cdoc, ';') + 1; // find the 2nd last ;
+			char *colSt = strchr(lineSt, ':');
+			if (!colSt)
+				return -1;
+			colSt[0] = 0;
+			column = atoi(colSt + 1) - 1;
+			return atoi(lineSt) - 1;
+		}
 	}	// switch
 	return -1;
 }
diff -r be657e3ced19 scite/win32/SciTEWin.cxx
--- a/scite/win32/SciTEWin.cxx	Mon Jul 23 00:20:07 2012 -0500
+++ b/scite/win32/SciTEWin.cxx	Mon Jul 23 00:52:24 2012 -0500
@@ -2145,7 +2145,7 @@
 
 static const char *textFindPrompt = "Fi&nd:";
 static const char *textReplacePrompt = "Rep&lace:";
-static const char *textFindNext = "&Find Next";
+static const char *textFindNext = "F&ind Next";
 static const char *textMarkAll = "&Mark All";
 
 static const char *textReplace = "&Replace";
